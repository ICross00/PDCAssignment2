package javasudoku.view;

import java.util.Observable;
import java.util.Observer;
import javax.swing.JButton;
import javasudoku.model.SudokuCell;
import javasudoku.model.SudokuBoard;

/**
 *
 * @author Ishaiah Cross
 */
public class SudokuView extends javax.swing.JFrame implements Observer {

    /**
     * Creates new form GUIJavaSudokuView
     */
    public SudokuView() {
        initComponents();
        newGameButton.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sudokuBoardPanel = new javasudoku.view.BoardPanel();
        optionsPanel = new javax.swing.JPanel();
        showSolButton = new javax.swing.JButton();
        changeUserButton = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();
        newGameButton = new javax.swing.JButton();
        loadGameButton = new javax.swing.JButton();
        newUserButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        playerName = new javax.swing.JLabel();
        errorLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Java Sudoku");
        setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Grey"));
        setForeground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(630, 535));
        setName("sudokuFrame"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(630, 535));

        optionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Options", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        showSolButton.setText("Show Solution");

        changeUserButton.setText("Select User");
        changeUserButton.setMaximumSize(new java.awt.Dimension(106, 22));
        changeUserButton.setMinimumSize(new java.awt.Dimension(106, 22));
        changeUserButton.setPreferredSize(new java.awt.Dimension(106, 22));

        quitButton.setBackground(new java.awt.Color(255, 153, 153));
        quitButton.setForeground(new java.awt.Color(0, 0, 0));
        quitButton.setText("Quit Game");
        quitButton.setFocusTraversalPolicyProvider(true);
        quitButton.setNextFocusableComponent(newGameButton);

        newGameButton.setText("New Game");

        loadGameButton.setText("Load Game");

        newUserButton.setText("New User");
        newUserButton.setMaximumSize(new java.awt.Dimension(106, 22));
        newUserButton.setMinimumSize(new java.awt.Dimension(106, 22));
        newUserButton.setPreferredSize(new java.awt.Dimension(106, 22));

        helpButton.setText("Help");

        javax.swing.GroupLayout optionsPanelLayout = new javax.swing.GroupLayout(optionsPanel);
        optionsPanel.setLayout(optionsPanelLayout);
        optionsPanelLayout.setHorizontalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(helpButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loadGameButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newGameButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showSolButton, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(changeUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newUserButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        optionsPanelLayout.setVerticalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loadGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(showSolButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(changeUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addComponent(helpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        playerName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        playerName.setText("Player:");

        errorLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        errorLabel.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(playerName)
                        .addGap(253, 253, 253)
                        .addComponent(errorLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sudokuBoardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(optionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playerName)
                    .addComponent(errorLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sudokuBoardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(optionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton changeUserButton;
    public javax.swing.JLabel errorLabel;
    public javax.swing.JButton helpButton;
    public javax.swing.JButton loadGameButton;
    public javax.swing.JButton newGameButton;
    public javax.swing.JButton newUserButton;
    private javax.swing.JPanel optionsPanel;
    public javax.swing.JLabel playerName;
    public javax.swing.JButton quitButton;
    public javax.swing.JButton showSolButton;
    public javasudoku.view.BoardPanel sudokuBoardPanel;
    // End of variables declaration//GEN-END:variables

    /**
     * Sets the name displayed by the playerName label
     * @param name The name to set
     */
    private void setPlayerName(String name) {
        this.playerName.setText("Player: " + name);
    }
    
    /**
     * Sets whether or not the cells in the board panel can be edited
     * @param activated True to allow editing, false to disable
     */
    public void activateBoard(boolean activated) {
        sudokuBoardPanel.setActive(activated);
    }
    
    /**
     * Resets all of the cells' text colours to black to indicate a valid board state
     * when a new game is started
     */
    public void setValid() {
        sudokuBoardPanel.setValid();
    }
    
    @Override
    public void update(Observable o, Object arg) {
        //Receive a SudokuBoard object
        if(arg instanceof javasudoku.model.SudokuBoard) {
            
            //Use the received SudokuBoard object to extract the board data
            SudokuBoard boardObj = (SudokuBoard)arg;
            SudokuCell[][] boardArray = boardObj.getBoard();
            
            //Update the BoardPanel to match
            int x;
            int y = 0;
            
            for(SudokuCell[] row: boardArray) {
                x = 0;
                for(SudokuCell cell: row) {
                    sudokuBoardPanel.setCellValue(x, y, cell.getCellValue());
                    x++;
                }
                y++;
            }
        }
        //Receive a player name string
        else if(arg instanceof String) {
            //Update the player name label
            setPlayerName((String)arg);
        }
    }
}
